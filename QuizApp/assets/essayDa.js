const essayData = [

  // --- CS110 Term 1 Data (Modules 1-4) ---

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 2)",

    tag: "‚ôªÔ∏è",

    title: "Responsible E-waste Disposal Process",

    course: "CS110",

    term: "T1",

    steps: [

      {

        q: "What is the first action step suggested by the Sustainable Electronics Management (SEM) initiative when acquiring new electronic equipment?",

        options: ["Donate old equipment", "Recycle existing e-waste", "Buy Green (products designed sustainably)", "Dispose of equipment in landfills"],

        correct: 2,

        explanation: "The first action step is 'Buy Green' - when purchasing new electronic equipment, buy only products that have been designed sustainably.",

      },

      {

        q: "If you have used but still functional electronic equipment, what is a recommended responsible disposal method according to SEM?",

        options: ["Throw it in the regular trash", "Donate it to a school, charity, or nonprofit organization", "Sell it for scrap metal without verification", "Burn it"],

        correct: 1,

        explanation: "The second action step is 'Donate' - donate used but still functional equipment to a school, charity, or nonprofit organization.",

      },

      {

        q: "What is the final recommended action for disposing of electronic equipment that is no longer functional?",

        options: ["Keep it indefinitely", "Send it to a verified used electronics recycling center", "Bury it underground", "Leave it on the side of the road"],

        correct: 1,

        explanation: "The third action step is 'Recycle' - send equipment to a verified used electronics recycling center.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 3)",

    tag: "‚û°Ô∏è",

    title: "The Input Process in Computing",

    course: "CS110",

    term: "T1",

    steps: [

      {

        q: "What is the initial action of entering data or instructions into the memory of a computer or mobile device?",

        options: ["Outputting data", "Processing data", "Inputting data/instructions", "Storing data"],

        correct: 2,

        explanation: "Input is any data and instructions entered into the memory of a computer or mobile device.",

      },

      {

        q: "Which type of input involves an instruction that causes a program or app to perform a specific action?",

        options: ["Data", "Command", "User Response", "Output"],

        correct: 1,

        explanation: "A command is an instruction that causes a program or app to perform a specific action.",

      },

      {

        q: "When a user provides an instruction by responding to a question displayed by a program or app, what is this called?",

        options: ["Command", "Data", "Output", "User Response"],

        correct: 3,

        explanation: "A user response is an instruction that a user issues by responding to a question displayed by a program or app.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 3)",

    tag: "‚¨ÖÔ∏è",

    title: "The Output Process in Computing",

    course: "CS110",

    term: "T1",

    steps: [

      {

        q: "What is the definition of 'output' in computing?",

        options: ["A collection of unprocessed items", "Data that has been processed into a useful form or information generated by a device", "Instructions waiting to be executed", "Raw data entered by a user"],

        correct: 1,

        explanation: "Output is data that has been processed into a useful form, or information that is presented or generated by a computer or mobile device.",

      },

      {

        q: "Which of the following would typically represent an output operation?",

        options: ["Typing on a keyboard", "Scanning a document", "Printing a report", "Clicking a mouse"],

        correct: 2,

        explanation: "Printing a report is an example of a computer producing output.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 4)",

    tag: "üîÑ",

    title: "Binary to Decimal Conversion Process",

    course: "CS110",

    term: "T1",

    steps: [

      {

        q: "When converting a binary number to decimal, what is the first conceptual step for each binary digit?",

        options: ["Divide it by 2", "Multiply it by a power of 10", "Multiply it by a power of 2 based on its position", "Convert it to hexadecimal"],

        correct: 2,

        explanation: "To convert binary to decimal, you multiply each bit by 2 raised to the power of its position.",

      },

      {

        q: "For the rightmost digit in a binary number, what power of 2 is it typically multiplied by?",

        options: ["2^1", "2^0", "2^2", "2^-1"],

        correct: 1,

        explanation: "Starting from the rightmost digit (least significant bit), the position starts at 0, so it's multiplied by 2^0.",

      },

      {

        q: "What is the final step after calculating the products of each binary digit and its corresponding power of 2?",

        options: ["Subtract all the products", "Sum all the products", "Divide the total by 2", "Multiply the total by 10"],

        correct: 1,

        explanation: "The last step is to sum all the products to obtain the decimal equivalent.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 4)",

    tag: "üîÑ",

    title: "Hexadecimal to Binary Conversion Process",

    course: "CS110",

    term: "T1",

    steps: [

      {

        q: "What is the key step in converting a hexadecimal number to a binary number?",

        options: ["Convert the entire hexadecimal number to decimal first", "Convert each hexadecimal digit into a three-digit binary number", "Convert each hexadecimal digit into a four-digit binary number", "Divide the hexadecimal number by 16"],

        correct: 2,

        explanation: "The process involves converting each hexadecimal digit into a four-digit binary number.",

      },

      {

        q: "If you are converting the hexadecimal digit 'A' to binary, what is its four-digit binary equivalent?",

        options: ["0101", "1010", "1100", "0010"],

        correct: 1,

        explanation: "Hexadecimal 'A' represents decimal 10, which is '1010' in binary.",

      },

      {

        q: "After converting each hexadecimal digit to its binary equivalent, what is the next step to form the complete binary number?",

        options: ["Reverse the order of the binary groups", "Concatenate (combine) all the binary groups in order", "Add all the binary groups together", "Convert the binary groups back to decimal"],

        correct: 1,

        explanation: "The binary groups are then combined to get the final binary result.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 4)",

    tag: "üîÑ",

    title: "Octal to Binary Conversion Process",

    course: "CS110",

    term: "T1",

    steps: [

      {

        q: "What is the first step when converting an octal number to binary?",

        options: ["Convert each octal number into a two-digit binary number", "Convert each octal number into a three-digit binary number", "Convert the entire octal number to decimal first", "Divide the octal number by 8"],

        correct: 1,

        explanation: "Convert each octal number into a three-digit binary number moving from right to left.",

      },

      {

        q: "If you convert the octal digit '7' to binary, what is its three-digit binary equivalent?",

        options: ["011", "101", "110", "111"],

        correct: 3,

        explanation: "Octal '7' represents decimal 7, which is '111' in binary.",

      },

      {

        q: "What forms the final binary result after converting each octal digit to its three-digit binary equivalent?",

        options: ["The sum of all the bits", "The number formed by the combination of all the bits", "The average of the bits", "The product of the bits"],

        correct: 1,

        explanation: "The result is the number formed by the combination of all the bits.",

      }

    ]

  },



  // --- CS110 Term 2 Data (Modules 5-7) ---

  // No explicit step-by-step processes or cycles suitable for "EssaySimulation" found in modules 5-7

  // beyond what's already covered in general "short answer" questions.

  // The 'Internet of Things' description is more about concepts and examples than a sequential process.

  // Network classifications are categories, not processes.

  // Online content usage ethics are guidelines, not a cycle.



  // --- CS110 Term 3 Data (Modules 8-11) ---

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 8)",

    tag: "üîß",

    title: "Program Troubleshooting Process",

    course: "CS110",

    term: "T3",

    steps: [

      {

        q: "What is the core definition of 'troubleshooting' a program or app?",

        options: ["The act of installing new software", "The steps taken to identify and solve a problem", "The process of backing up files", "The method of updating the operating system"],

        correct: 1,

        explanation: "Troubleshooting refers to the steps you take to identify and solve a problem, such as a crash.",

      },

      {

        q: "Which of the following is a potential cause of a program or app crash that would require troubleshooting?",

        options: ["Correctly entered data", "A new hardware upgrade", "A virus or other malware", "A stable network connection"],

        correct: 2,

        explanation: "A crash can be caused by an issue with the hardware, the software, a virus or other malware, or using invalid data or commands.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 9)",

    tag: "‚òÅÔ∏è",

    title: "Steps to Use a Virtual Machine (Initial Setup)",

    course: "CS110",

    term: "T3",

    steps: [

      {

        q: "What is the initial software requirement to begin using a virtual machine?",

        options: ["A web browser", "A word processor", "An app that creates and runs virtual machines", "An antivirus program"],

        correct: 2,

        explanation: "To begin, you typically install an app that creates and runs virtual machines.",

      },

      {

        q: "After installing the virtual machine software, what is the next step to set up a new virtual environment?",

        options: ["Run the app and select the option to create a new virtual machine", "Immediately install an operating system", "Shut down the computer", "Connect to a network"],

        correct: 0, // This is based on the original content, which says "Run the app and select the option to create a new virtual machine."

        explanation: "After installing the software, you run the app and select the option to create a new virtual machine.",

      },

      {

        q: "Once the virtual machine settings are specified, what might be necessary to install the desired operating system within the VM?",

        options: ["Connecting to the internet", "Inserting the installation media for the OS", "Running an update program", "Deleting existing files"],

        correct: 1,

        explanation: "If necessary, insert the installation media for the operating system you want to run in the virtual machine.",

      },

      {

        q: "After the operating system is installed on the virtual machine, what is the final step when you are finished using it?",

        options: ["Leave it running indefinitely", "Shut down the operating system and exit the virtual machine software", "Delete the virtual machine", "Install more applications"],

        correct: 1,

        explanation: "When you are finished using the virtual machine, shut down the operating system in the same manner you would shut down your computer, then exit the virtual machine software.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 9)",

    tag: "‚òÅÔ∏è",

    title: "Steps to Use a Virtual Machine (After Setup)",

    course: "CS110",

    term: "T3",

    steps: [

      {

        q: "Once a virtual machine is set up, what is the first step to run it again?",

        options: ["Reinstall the operating system", "Run the virtual machine software", "Create a new virtual machine", "Format the hard drive"],

        correct: 1,

        explanation: "After you set up the virtual machine, you can use the virtual machine at any time by running the virtual machine software.",

      },

      {

        q: "After running the virtual machine software, what is the next action to start a specific virtual machine?",

        options: ["Click the button to run the virtual machine", "Delete the virtual machine", "Install new software on the host machine", "Shut down the virtual machine"],

        correct: 0,

        explanation: "Select the virtual machine you want to run, then click the button to run the virtual machine.",

      },

      {

        q: "When you are finished using a running virtual machine, how do you properly conclude its use?",

        options: ["Unplug the computer", "Force quit the virtual machine software", "Shut down the operating system within the virtual machine and then exit the software", "Restart the entire computer"],

        correct: 2,

        explanation: "When you are finished using the virtual machine, shut down the operating system in a similar way to how you would shut down your computer, then exit the virtual machine software.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 11)",

    tag: "‚öôÔ∏è",

    title: "The C++ Program Development Cycle (General)",

    course: "CS110",

    term: "T3",

    steps: [

      {

        q: "What is the initial phase in the standard C++ program development cycle?",

        options: ["Debugging", "Writing the source code", "Compiling", "Linking"],

        correct: 1,

        explanation: "The complete development cycle starts with writing the program (source code).",

      },

      {

        q: "After writing the source code, which tool translates the entire code into an object file in a compiled language like C++?",

        options: ["An interpreter", "A debugger", "A linker", "A compiler"],

        correct: 3,

        explanation: "To turn your source code into a program, you use a compiler. This step is called compiling.",

      },

      {

        q: "What is the role of the 'linker' in the C++ program development cycle?",

        options: ["To execute the program line by line", "To identify syntax errors", "To combine the object file with necessary libraries to create an executable program", "To manage memory allocation"],

        correct: 2,

        explanation: "The compiler then invokes a linker, which turns the object file into an executable program.",

      },

      {

        q: "If a 'bug' is encountered during program execution, what is the typical iterative process to resolve it?",

        options: ["Start a new program from scratch", "Ignore the bug and continue running", "Edit the source code, recompile, relink, and rerun the program", "Consult a different programming language manual"],

        correct: 2,

        explanation: "Whatever type of bug you find, you must fix it, and that involves editing your source code, recompiling and relinking, and then rerunning the program.",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 11)",

    tag: "‚öôÔ∏è",

    title: "Understanding Integer Overflow (Based on Listing 4.2)",

    course: "CS110",

    term: "T3",

    steps: [

      {

        q: "Consider the code in Listing 4.2. What type of variable is `bigNumber` and `smallNumber` declared as?",

        options: ["`int`", "`float`", "`unsigned int`", "`double`"],

        correct: 2,

        explanation: "Both `bigNumber` and `smallNumber` are declared as `unsigned int`.",

      },

      {

        q: "When a smaller `unsigned int` is subtracted from a larger `unsigned int` (e.g., `bigNumber - smallNumber`), what is the expected outcome?",

        options: ["A negative result", "An integer overflow", "A normal positive result", "A compilation error"],

        correct: 2,

        explanation: "As demonstrated, `bigNumber - smallNumber` (100 - 50) results in a normal positive difference (50).",

      },

      {

        q: "What phenomenon occurs when a larger `unsigned int` is subtracted from a smaller `unsigned int` (e.g., `smallNumber - bigNumber`) in C++?",

        options: ["Underflow", "Integer overflow", "Type mismatch error", "Automatic type conversion"],

        correct: 1,

        explanation: "When a large unsigned number is subtracted from a small unsigned number, the result would be negative, but because it is evaluated (and printed) as an unsigned number, the result is an overflow.",

      },

      {

        q: "What kind of value does an 'integer overflow' produce for an `unsigned int` when a negative result is expected?",

        options: ["A small negative number", "Exactly zero", "A very large positive number", "A runtime error that stops the program"],

        correct: 2,

        explanation: "The result of an unsigned integer overflow is a very large positive number (e.g., 4294967246 for a 32-bit unsigned int).",

      }

    ]

  },

  {

    type: "EssaySimulation",

    topic: "CS110",

    year: "Notes (Module 11)",

    tag: "‚öôÔ∏è",

    title: "Conditional Program Flow with `if` Statements (Listing 4.4)",

    course: "CS110",

    term: "T3",

    steps: [

      {

        q: "What is the fundamental purpose of the `if` statement shown in Listing 4.4?",

        options: ["To declare variables", "To perform repetitive tasks", "To test a condition and execute code conditionally", "To define a new function"],

        correct: 2,

        explanation: "The `if` statement enables you to test for a condition (such as whether two variables are equal) and branch to different parts of your code, depending on the result.",

      },

      {

        q: "In the `if (RedSoxScore > YankeesScore)` condition in Listing 4.4, if the condition evaluates to true, which code block is executed?",

        options: ["The `else if` block (line 19)", "The `else` block (line 29)", "The code immediately following the `if` statement (line 16)", "The `main` function restarts"],

        correct: 2,

        explanation: "If the expression in the `if` statement (line 15) has a nonzero value (true), the statement on line 16 (`cout << 'Go Sox!\\n';`) is executed.",

      },

      {

        q: "If the `if` condition on line 15 (`RedSoxScore > YankeesScore`) is false, what is the next logical check made by the program?",

        options: ["The `else` block is immediately executed", "The program terminates", "The `else if (YankeesScore > RedSoxScore)` condition is checked", "The program prompts for new scores"],

        correct: 2,

        explanation: "If the `if` expression (line 15) is false, the program proceeds to evaluate the `else if` expression (line 19).",

      },

      {

        q: "What happens if both `RedSoxScore > YankeesScore` and `YankeesScore > RedSoxScore` conditions are false?",

        options: ["The program outputs 'Go Sox!'", "The `else` block (starting line 29) is executed", "The program skips all conditional blocks", "The `main` function returns 0 immediately"],

        correct: 1,

        explanation: "If all preceding `if` and `else if` expressions are false, the code in the `else` block (lines 29-30) is executed.",

      }

    ]

  }

];